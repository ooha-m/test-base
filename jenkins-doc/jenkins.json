{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "jenkinsSettings": {
            "type": "object"
        },
        "apiVersions": {
            "type": "object"
        },
        "networkSettings": {
            "type": "object"
        },
        "baseUrl": {
            "type": "string"
        },
        "deploymentApiVersion": {
            "type": "string"
        },
        "resourceGroupName": {
            "type": "string"
        }
    },
    "variables": {
        "sasToken": "",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('networkSettings').virtualNetworkName)]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('networkSettings').subnet1Name)]",
        "sshKeyPath": "[concat('/home/',parameters('jenkinsSettings').adminUsername,'/.ssh/authorized_keys')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('jenkinsSettings').adminUsername, '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('jenkinsSettings').adminPasswordOrKey]"
                }
              ]
            }
        }
    },
    "resources": [
        {
            "name": "[parameters('jenkinsSettings').jenkinsfrontEndNSGName]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('jenkinsSettings').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-rule",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow SSH",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "direction": "Inbound",
                            "priority": 100,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "http-rule",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow HTTP",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "8080",
                            "direction": "Inbound",
                            "priority": 102,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('networkSettings').virtualNetworkName]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('networkSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('jenkinsSettings').jenkinsDiagnosticsStorageAccountName)]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('jenkinsSettings').jenkinsfrontEndNSGName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('networkSettings').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('networkSettings').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[parameters('networkSettings').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('jenkinsSettings').jenkinsfrontEndNSGName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('jenkinsSettings').jenkinsDiagnosticsStorageAccountName]",
            "apiVersion": "[parameters('apiVersions').storageApiVersion]",
            "location": "[parameters('jenkinsSettings').location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "name": "[parameters('jenkinsSettings').jenkinsPipName]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('jenkinsSettings').location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('jenkinsSettings').publicIpAddressType]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('jenkinsSettings').jenkinsDnsLabelPrefix]"
                }
            }
        },
        {
            "name": "[parameters('jenkinsSettings').jenkinsNicName]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[parameters('apiVersions').networkApiVersion]",
            "location": "[parameters('jenkinsSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('jenkinsSettings').jenkinsPipName)]"

            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIpAddress": "[parameters('jenkinsSettings').jenkinsVmPrivateIP]",
                            "privateIPAllocationMethod": "Static",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('jenkinsSettings').jenkinsPipName)]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('jenkinsSettings').jenkinsVmName]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('jenkinsSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('jenkinsSettings').jenkinsDiagnosticsStorageAccountName)]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('jenkinsSettings').jenkinsNicName)]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('jenkinsSettings').jenkinsVmName]",
                    "adminUsername": "[parameters('jenkinsSettings').adminUsername]",
                    "adminPassword": "[parameters('jenkinsSettings').adminPasswordOrKey]",
                    "linuxConfiguration": "[if(equals(parameters('jenkinsSettings').authenticationType, 'password'), json('null'), variables('linuxConfiguration'))]"
                  },
                "hardwareProfile": {
                    "vmSize": "[parameters('jenkinsSettings').jenkinsVmSize]"
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "UbuntuServer",
                        "publisher": "Canonical",
                        "sku": "[parameters('jenkinsSettings').ubuntuSku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('jenkinsSettings').jenkinsNicName)]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('jenkinsSettings').jenkinsDiagnosticsStorageAccountName)).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('jenkinsSettings').jenkinsVmName, '/Init')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "[parameters('apiVersions').computeApiVersion]",
            "location": "[parameters('jenkinsSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('jenkinsSettings').jenkinsVmName)]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('jenkinsSettings').installJenkinsScriptUrl)]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('./' , parameters('jenkinsSettings').installJenkinsScriptName, ' -jf \"', reference(parameters('jenkinsSettings').jenkinsPipName).dnsSettings.fqdn, '\" -pi \"', parameters('jenkinsSettings').jenkinsVmPrivateIP, '\" -jrt \"', parameters('jenkinsSettings').jenkinsReleaseType , '\" -al \"', parameters('jenkinsSettings').baseUrl, '\" -st \"', variables('sasToken'), '\"' )]"
                }
            }
        }
    ],
    "outputs": {
        "jenkinsDNS": {
            "type": "string",
            "value": "[reference(parameters('jenkinsSettings').jenkinsPipName).dnsSettings.fqdn]"
        }
    }
}
