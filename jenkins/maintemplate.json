{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "username for the virtual machines."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "metadata": {
                "description": "authentication type for the virtual machines."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "metadata": {
                "description": "generate ssh public key"
            }
        },
        "jenkinsVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "vm size"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/ooha-m/test-base/jenkins/jenkins",
            "metadata": {
                "description": "The base uri where artifacts required by this template are located. when the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sastoken required to access _artifactslocation.  when the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            }
        }
    },
    "variables": {
        "networkSettings": {
            "location": "[variables('location')]",
            "networkApiVersion": "2016-03-30",
            "virtualNetworkName": "OSS",
            "addressPrefix": "10.0.0.0/16",
            "subnet1Name": "Jenkins",
            "subnet1Prefix": "10.0.0.0/24"
        },
        "jenkinsSettings": {
            "location": "[variables('location')]",
            "jenkinsDiagnosticsStorageAccountName": "[concat('jenkinsstrg',variables('suffix'))]",
            "jenkinsPipName": "jenkins-pip",
            "publicIpAddressType": "[variables('publicIpAddressType')]",
            "jenkinsDnsLabelPrefix": "[concat('jenkinsserver',variables('suffix'))]",
            "jenkinsfrontEndNSGName": "jenkins-nsg",
            "jenkinsNicName": "jenkins-nic",
            "jenkinsVmPrivateIP": "10.0.0.5",
            "jenkinsVmName": "jenkinsserver",
            "adminUsername": "[parameters('adminUsername')]",
            "authenticationType": "[parameters('authenticationType')]",
            "sshPublicKey": "[parameters('sshPublicKey')]",
            "jenkinsVmSize": "[parameters('jenkinsVmSize')]",
            "ubuntuSku": "16.04-LTS",
            "storageAccountType": "Standard_LRS",
            "installJenkinsScriptName": "install_jenkins.sh",
            "jenkinsReleaseType": "LTS",
            "_artifactsLocation": "[parameters('_artifactsLocation')]",
            "_artifactsLocationSasToken":"[parameters('_artifactsLocationSasToken')]",
            "installJenkinsScriptUrl": "[concat(parameters('_artifactsLocation'),'/scripts/install_jenkins.sh', parameters('_artifactsLocationSasToken'))]"
        },
       "resourceGroupName": "[resourceGroup().name]",
        "publicIpAddressType": "Dynamic",
        "location": "[resourceGroup().location]",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]"
    },
    "resources": [
        {
            "comments": "This network security group is used for jenkins server.",
            "name": "[variables('jenkinsSettings').jenkinsfrontEndNSGName]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-04-01",
            "location": "[variables('jenkinsSettings').location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-rule",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow SSH",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "direction": "Inbound",
                            "priority": 100,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "http-rule",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow HTTP",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "8080",
                            "direction": "Inbound",
                            "priority": 102,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            }
        },
        {
            "comments": "This virtual network is used for the entire solution.",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('networkSettings').virtualNetworkName]",
            "apiVersion": "2017-04-01",
            "location": "[variables('networkSettings').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('jenkinsSettings').jenkinsfrontEndNSGName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('networkSettings').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('networkSettings').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet1Prefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jenkinsSettings').jenkinsfrontEndNSGName)]"
                            }
                        }
                    }
                                        ]
            }
        },
        {
            "comments": "This is the deployment of jenkins related nested resources",
            "type": "Microsoft.Resources/deployments",
            "name": "Jenkins",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('jenkinsSettings').jenkinsfrontEndNSGName)]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('networkSettings').virtualNetworkName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'),'/nested/jenkins.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "jenkinsSettings": {
                        "value": "[variables('jenkinsSettings')]"
                    },
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    }                             
                }
            }
        }
    ],
    "outputs": {        
        "JenkinsFQDN": {
            "type": "string",
            "value": "[reference('Jenkins').outputs.jenkinsDNS.value]"
        },
        "JenkinsWebUIURL": {
            "type": "string",
            "value": "[concat(reference('Jenkins').outputs.jenkinsDNS.value,':8080')]"
        }
      
    }
}
